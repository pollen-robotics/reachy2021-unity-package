// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: fullbody_cartesian_command.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Reachy.Sdk.Kinematics {

  /// <summary>Holder for reflection information generated from fullbody_cartesian_command.proto</summary>
  public static partial class FullbodyCartesianCommandReflection {

    #region Descriptor
    /// <summary>File descriptor for fullbody_cartesian_command.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FullbodyCartesianCommandReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiBmdWxsYm9keV9jYXJ0ZXNpYW5fY29tbWFuZC5wcm90bxIVcmVhY2h5LnNk",
            "ay5raW5lbWF0aWNzGhRhcm1fa2luZW1hdGljcy5wcm90bxoXb3JiaXRhX2tp",
            "bmVtYXRpY3MucHJvdG8igAEKG0Z1bGxCb2R5Q2FydGVzaWFuQ29tbWFuZEFj",
            "axIgChhsZWZ0X2FybV9jb21tYW5kX3N1Y2Nlc3MYASABKAgSIQoZcmlnaHRf",
            "YXJtX2NvbW1hbmRfc3VjY2VzcxgCIAEoCBIcChRuZWNrX2NvbW1hbmRfc3Vj",
            "Y2VzcxgDIAEoCCK/AQoYRnVsbEJvZHlDYXJ0ZXNpYW5Db21tYW5kEjUKCGxl",
            "ZnRfYXJtGAEgASgLMiMucmVhY2h5LnNkay5raW5lbWF0aWNzLkFybUlLUmVx",
            "dWVzdBI2CglyaWdodF9hcm0YAiABKAsyIy5yZWFjaHkuc2RrLmtpbmVtYXRp",
            "Y3MuQXJtSUtSZXF1ZXN0EjQKBG5lY2sYAyABKAsyJi5yZWFjaHkuc2RrLmtp",
            "bmVtYXRpY3MuT3JiaXRhSUtSZXF1ZXN0MrMCCh9GdWxsQm9keUNhcnRlc2lh",
            "bkNvbW1hbmRTZXJ2aWNlEoQBCh1TZW5kRnVsbEJvZHlDYXJ0ZXNpYW5Db21t",
            "YW5kcxIvLnJlYWNoeS5zZGsua2luZW1hdGljcy5GdWxsQm9keUNhcnRlc2lh",
            "bkNvbW1hbmQaMi5yZWFjaHkuc2RrLmtpbmVtYXRpY3MuRnVsbEJvZHlDYXJ0",
            "ZXNpYW5Db21tYW5kQWNrEogBCh9TdHJlYW1GdWxsQm9keUNhcnRlc2lhbkNv",
            "bW1hbmRzEi8ucmVhY2h5LnNkay5raW5lbWF0aWNzLkZ1bGxCb2R5Q2FydGVz",
            "aWFuQ29tbWFuZBoyLnJlYWNoeS5zZGsua2luZW1hdGljcy5GdWxsQm9keUNh",
            "cnRlc2lhbkNvbW1hbmRBY2soAWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Reachy.Sdk.Kinematics.ArmKinematicsReflection.Descriptor, global::Reachy.Sdk.Kinematics.OrbitaKinematicsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Reachy.Sdk.Kinematics.FullBodyCartesianCommandAck), global::Reachy.Sdk.Kinematics.FullBodyCartesianCommandAck.Parser, new[]{ "LeftArmCommandSuccess", "RightArmCommandSuccess", "NeckCommandSuccess" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Reachy.Sdk.Kinematics.FullBodyCartesianCommand), global::Reachy.Sdk.Kinematics.FullBodyCartesianCommand.Parser, new[]{ "LeftArm", "RightArm", "Neck" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class FullBodyCartesianCommandAck : pb::IMessage<FullBodyCartesianCommandAck>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FullBodyCartesianCommandAck> _parser = new pb::MessageParser<FullBodyCartesianCommandAck>(() => new FullBodyCartesianCommandAck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FullBodyCartesianCommandAck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Reachy.Sdk.Kinematics.FullbodyCartesianCommandReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FullBodyCartesianCommandAck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FullBodyCartesianCommandAck(FullBodyCartesianCommandAck other) : this() {
      leftArmCommandSuccess_ = other.leftArmCommandSuccess_;
      rightArmCommandSuccess_ = other.rightArmCommandSuccess_;
      neckCommandSuccess_ = other.neckCommandSuccess_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FullBodyCartesianCommandAck Clone() {
      return new FullBodyCartesianCommandAck(this);
    }

    /// <summary>Field number for the "left_arm_command_success" field.</summary>
    public const int LeftArmCommandSuccessFieldNumber = 1;
    private bool leftArmCommandSuccess_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool LeftArmCommandSuccess {
      get { return leftArmCommandSuccess_; }
      set {
        leftArmCommandSuccess_ = value;
      }
    }

    /// <summary>Field number for the "right_arm_command_success" field.</summary>
    public const int RightArmCommandSuccessFieldNumber = 2;
    private bool rightArmCommandSuccess_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool RightArmCommandSuccess {
      get { return rightArmCommandSuccess_; }
      set {
        rightArmCommandSuccess_ = value;
      }
    }

    /// <summary>Field number for the "neck_command_success" field.</summary>
    public const int NeckCommandSuccessFieldNumber = 3;
    private bool neckCommandSuccess_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool NeckCommandSuccess {
      get { return neckCommandSuccess_; }
      set {
        neckCommandSuccess_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FullBodyCartesianCommandAck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FullBodyCartesianCommandAck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LeftArmCommandSuccess != other.LeftArmCommandSuccess) return false;
      if (RightArmCommandSuccess != other.RightArmCommandSuccess) return false;
      if (NeckCommandSuccess != other.NeckCommandSuccess) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LeftArmCommandSuccess != false) hash ^= LeftArmCommandSuccess.GetHashCode();
      if (RightArmCommandSuccess != false) hash ^= RightArmCommandSuccess.GetHashCode();
      if (NeckCommandSuccess != false) hash ^= NeckCommandSuccess.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LeftArmCommandSuccess != false) {
        output.WriteRawTag(8);
        output.WriteBool(LeftArmCommandSuccess);
      }
      if (RightArmCommandSuccess != false) {
        output.WriteRawTag(16);
        output.WriteBool(RightArmCommandSuccess);
      }
      if (NeckCommandSuccess != false) {
        output.WriteRawTag(24);
        output.WriteBool(NeckCommandSuccess);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LeftArmCommandSuccess != false) {
        output.WriteRawTag(8);
        output.WriteBool(LeftArmCommandSuccess);
      }
      if (RightArmCommandSuccess != false) {
        output.WriteRawTag(16);
        output.WriteBool(RightArmCommandSuccess);
      }
      if (NeckCommandSuccess != false) {
        output.WriteRawTag(24);
        output.WriteBool(NeckCommandSuccess);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LeftArmCommandSuccess != false) {
        size += 1 + 1;
      }
      if (RightArmCommandSuccess != false) {
        size += 1 + 1;
      }
      if (NeckCommandSuccess != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FullBodyCartesianCommandAck other) {
      if (other == null) {
        return;
      }
      if (other.LeftArmCommandSuccess != false) {
        LeftArmCommandSuccess = other.LeftArmCommandSuccess;
      }
      if (other.RightArmCommandSuccess != false) {
        RightArmCommandSuccess = other.RightArmCommandSuccess;
      }
      if (other.NeckCommandSuccess != false) {
        NeckCommandSuccess = other.NeckCommandSuccess;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LeftArmCommandSuccess = input.ReadBool();
            break;
          }
          case 16: {
            RightArmCommandSuccess = input.ReadBool();
            break;
          }
          case 24: {
            NeckCommandSuccess = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            LeftArmCommandSuccess = input.ReadBool();
            break;
          }
          case 16: {
            RightArmCommandSuccess = input.ReadBool();
            break;
          }
          case 24: {
            NeckCommandSuccess = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FullBodyCartesianCommand : pb::IMessage<FullBodyCartesianCommand>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FullBodyCartesianCommand> _parser = new pb::MessageParser<FullBodyCartesianCommand>(() => new FullBodyCartesianCommand());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FullBodyCartesianCommand> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Reachy.Sdk.Kinematics.FullbodyCartesianCommandReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FullBodyCartesianCommand() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FullBodyCartesianCommand(FullBodyCartesianCommand other) : this() {
      leftArm_ = other.leftArm_ != null ? other.leftArm_.Clone() : null;
      rightArm_ = other.rightArm_ != null ? other.rightArm_.Clone() : null;
      neck_ = other.neck_ != null ? other.neck_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FullBodyCartesianCommand Clone() {
      return new FullBodyCartesianCommand(this);
    }

    /// <summary>Field number for the "left_arm" field.</summary>
    public const int LeftArmFieldNumber = 1;
    private global::Reachy.Sdk.Kinematics.ArmIKRequest leftArm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Reachy.Sdk.Kinematics.ArmIKRequest LeftArm {
      get { return leftArm_; }
      set {
        leftArm_ = value;
      }
    }

    /// <summary>Field number for the "right_arm" field.</summary>
    public const int RightArmFieldNumber = 2;
    private global::Reachy.Sdk.Kinematics.ArmIKRequest rightArm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Reachy.Sdk.Kinematics.ArmIKRequest RightArm {
      get { return rightArm_; }
      set {
        rightArm_ = value;
      }
    }

    /// <summary>Field number for the "neck" field.</summary>
    public const int NeckFieldNumber = 3;
    private global::Reachy.Sdk.Kinematics.OrbitaIKRequest neck_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Reachy.Sdk.Kinematics.OrbitaIKRequest Neck {
      get { return neck_; }
      set {
        neck_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FullBodyCartesianCommand);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FullBodyCartesianCommand other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LeftArm, other.LeftArm)) return false;
      if (!object.Equals(RightArm, other.RightArm)) return false;
      if (!object.Equals(Neck, other.Neck)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (leftArm_ != null) hash ^= LeftArm.GetHashCode();
      if (rightArm_ != null) hash ^= RightArm.GetHashCode();
      if (neck_ != null) hash ^= Neck.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (leftArm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LeftArm);
      }
      if (rightArm_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RightArm);
      }
      if (neck_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Neck);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (leftArm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LeftArm);
      }
      if (rightArm_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RightArm);
      }
      if (neck_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Neck);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (leftArm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LeftArm);
      }
      if (rightArm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RightArm);
      }
      if (neck_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Neck);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FullBodyCartesianCommand other) {
      if (other == null) {
        return;
      }
      if (other.leftArm_ != null) {
        if (leftArm_ == null) {
          LeftArm = new global::Reachy.Sdk.Kinematics.ArmIKRequest();
        }
        LeftArm.MergeFrom(other.LeftArm);
      }
      if (other.rightArm_ != null) {
        if (rightArm_ == null) {
          RightArm = new global::Reachy.Sdk.Kinematics.ArmIKRequest();
        }
        RightArm.MergeFrom(other.RightArm);
      }
      if (other.neck_ != null) {
        if (neck_ == null) {
          Neck = new global::Reachy.Sdk.Kinematics.OrbitaIKRequest();
        }
        Neck.MergeFrom(other.Neck);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (leftArm_ == null) {
              LeftArm = new global::Reachy.Sdk.Kinematics.ArmIKRequest();
            }
            input.ReadMessage(LeftArm);
            break;
          }
          case 18: {
            if (rightArm_ == null) {
              RightArm = new global::Reachy.Sdk.Kinematics.ArmIKRequest();
            }
            input.ReadMessage(RightArm);
            break;
          }
          case 26: {
            if (neck_ == null) {
              Neck = new global::Reachy.Sdk.Kinematics.OrbitaIKRequest();
            }
            input.ReadMessage(Neck);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (leftArm_ == null) {
              LeftArm = new global::Reachy.Sdk.Kinematics.ArmIKRequest();
            }
            input.ReadMessage(LeftArm);
            break;
          }
          case 18: {
            if (rightArm_ == null) {
              RightArm = new global::Reachy.Sdk.Kinematics.ArmIKRequest();
            }
            input.ReadMessage(RightArm);
            break;
          }
          case 26: {
            if (neck_ == null) {
              Neck = new global::Reachy.Sdk.Kinematics.OrbitaIKRequest();
            }
            input.ReadMessage(Neck);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
